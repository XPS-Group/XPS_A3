NDContentPage.OnToolTipsLoaded({28:"<div class=\"NDToolTip TType LSQF\"><div class=\"TTSummary\">BI Wiki : HashMap</div></div>",37:"<div class=\"NDToolTip TType LSQF\"><div class=\"TTSummary\">HashMap&nbsp; with initial properties [Name], [AllowedTypes], and [Items]</div></div>",38:"<div class=\"NDToolTip TType LSQF\"><div class=\"TTSummary\">HashMap&nbsp; with initial properties [Name] and [Type]</div></div>",41:"<div class=\"NDToolTip TFunction LSQF\"><div class=\"TTSummary\">Creates and returns a new Container which breaks down an item into categorical properties.&nbsp; Think of it as taking an item such as an array which might be [Name,Type,Value] and seperating each element into three lists: [Names], [TypeByName], and [ValueByName]. Useful for quick lookup of a single property or value.&nbsp; This differs from a Collection in that a Collection stores a complete item within it.&nbsp; Typically in it\'s [Items] store.</div></div>",43:"<div class=\"NDToolTip TFunction LSQF\"><div class=\"TTSummary\">Creates and returns a new Containers object which is a Collection of type Container.&nbsp; It has additional requirements from a normal Collection in that the [Items] MUST be a type of Container and can be further restricted by the [AllowedContainers] list.</div></div>",50:"<div class=\"NDToolTip TFunction LSQF\"><div class=\"TTSummary\">Creates and works with Collection which stores a complete item in a HashMap store (such as the [Items] key) with a subkey for quick lookup. This differs from a Container in that all values are easily retrievable at once. The drawback is that if you only need a single value, you have to do an additional lookup within the returned value set.</div></div>"});